public class Port{
    private int maxWeightRepository; //Вместимость склада
    private int maxWeightShip; //Грузоподьемность корабля
    private int weightRepository; //Загрузка склада в начальный момент
    private int capacity; //Количество пристаней в порту (то есть количество поптоков в программе)
    private Repository repository; //Экземпляр склада, нужен что бы все доки работали с одним складом

    public Port(int maxWeightRepository, int maxWeightShip, int weightRepository, int capacity) {
        this.maxWeightRepository = maxWeightRepository;
        this.maxWeightShip = maxWeightShip;
        this.weightRepository = weightRepository;
        this.capacity = capacity;
        repository = new Repository(weightRepository,maxWeightRepository);
    }

    public Port() {
        this(100_000, 10_000, 95_000, 5);
    }

    public void startCharge(){
        Dock[] docks = new Dock[capacity];
        for (int i = 0; i < docks.length; i++) {
            try {
                docks[i] = new Dock(repository, maxWeightShip);
            } catch (IllegalArgumentException e){e.printStackTrace();}

        }
        while (true){
            for(int i = 0; i < docks.length; i++){
                if(!docks[i].thread.isAlive()){
                    docks[i] = new Dock(repository, maxWeightShip);
                }
            }
        }
    }
}
