package by.epam.lessons6.task2.remark;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Check {
    public boolean checkDate(String date){
        Pattern pattern = Pattern.compile("\\d{1,2}\\.\\d{1,2}\\.\\d{4}");
        Matcher matcher = pattern.matcher(date);
        if(matcher.find() || date.matches("null")) return true;
        else return false;
    }

    public boolean checkEmail(String email){
        /*Из вики
        * Local-part
The local-part of the email address may be unquoted or may be enclosed in quotation marks.

If unquoted, it may use any of these ASCII characters:

uppercase and lowercase Latin letters A to Z and a to z
digits 0 to 9
printable characters !#$%&'*+-/=?^_`{|}~
dot ., provided that it is not the first or last character and provided also that it does not appear consecutively
*
* he domain name part of an email address has to conform to strict guidelines: it must match the requirements for a hostname, a list of dot-separated DNS labels, each label being limited to a length of 63 characters and consisting of:[5]:§2

uppercase and lowercase Latin letters A to Z and a to z;
digits 0 to 9, provided that top-level domain names are not all-numeric;
hyphen -, provided that it is not the first or last character*

Про домент не полностью расписано. Предположу, что последняя часть должна состоять из .[буквы или цифры]/
         */

        if(email.matches("[\\w\\!#$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~][\\w\\!#$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~\\.]*[\\w\\!#$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~]@[\\w][\\w-]*[\\w]\\.[\\w]*")){
            return true;
        }
        return false;
    }
}
