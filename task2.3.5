import java.util.Arrays;

class Main {
    public static void main(String[] args) {
        int[] mass = {0, 1, 10, 2, 3, 33, 4, 5, 100, -1};

        for (int i = 1; i < mass.length; i++) {
            int index = binSearch(i, mass);
            changePosition(mass, i, index);
        }
        System.out.println(Arrays.toString(mass));
    }

    private static int binSearch(int index, int[] mass){
        return binSearch(0, index - 1, mass[index], mass);
    }

    private static int binSearch(int startIndex, int endIndex, int val, int[] mass){
        if(startIndex == endIndex) {
            if(mass[startIndex] < val) return startIndex + 1;
            else return startIndex;
        }
        int middle = (startIndex + endIndex) / 2;
        if(mass[middle] > val){
            endIndex = middle;
            return binSearch(startIndex, endIndex, val, mass);
        }
        else if(mass[middle] < val){
            startIndex = middle + 1;
            return binSearch(startIndex, endIndex, val, mass);
        }
        else {
            return middle;
        }
    }

    private static void changePosition(int[] mass, int endPosition, int selectPosition){
        for (int i = endPosition - 1; i >= selectPosition; i--) {
            int buffer = mass[i + 1];
            mass[i + 1] = mass[i];
            mass[i] = buffer;
        }
    }
}
