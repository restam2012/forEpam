package by.epam.task4.lesson2_5;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class TourPackage implements Serializable{
    private String name;
    private List<Type> type;
    private Transport transport;
    private int countEat;
    private int day;
    private double prise;

    public TourPackage(String name, Transport transport, int countEat, int day, double prise, Type ... types) {
        this.name = name;
        this.transport = transport;
        this.countEat = countEat;
        this.day = day;
        this.prise = prise;
        type = new ArrayList<>();
        for (Type t:types){
            type.add(t);
        }
    }
    
    public TourPackage() {
    	
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public List<Type> getType() {
        return type;
    }

    public void setType(List<Type> type) {
        this.type = type;
    }

    public Transport getTransport() {
        return transport;
    }

    public void setTransport(Transport transport) {
        this.transport = transport;
    }

    public int getCountEat() {
        return countEat;
    }

    public void setCountEat(int countEat) {
        this.countEat = countEat;
    }

    public int getDay() {
        return day;
    }

    public void setDay(int day) {
        this.day = day;
    }

    public double getPrise() {
        return prise;
    }

    public void setPrise(double prise) {
        this.prise = prise;
    }

    @Override
    public String toString() {
        return "Tour package " + name + ", type is " + type + ", by " + transport +
                " with " + countEat + " times of eat, for " + day + " days. Cost " + prise + " dollars.";
    }

	@Override
	public int hashCode() {
		return Objects.hash(countEat, day, name, prise, transport, type);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TourPackage other = (TourPackage) obj;
		return countEat == other.countEat && day == other.day && Objects.equals(name, other.name)
				&& Double.doubleToLongBits(prise) == Double.doubleToLongBits(other.prise)
				&& transport == other.transport && Objects.equals(type, other.type);
	}
    
    
}
